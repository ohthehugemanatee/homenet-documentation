---
  - name: "Set hostname"
    hosts: ubuntu
    become: true
    tasks:
      - name: Set the hostname
        ansible.builtin.hostname:
          name: '{{ new_hostname }}'
        when: new_hostname is defined
      - name: Append kernel command line params
        when: ansible_architecture == "aarch64"
        become: true
        ansible.builtin.lineinfile:
          path: /boot/firmware/cmdline.txt
          backrefs: yes
          regexp: '^(.*)$'
          line: '\1 cgroup_enable=cpuset cgroup_memory=1 cgroup_enable=memory'
      - name: Reboot
        when: new_hostname is defined
        ansible.builtin.shell: "reboot"
        async: 1
        poll: 0

  - name: "Setup k3s agent node"
    hosts: all:!ubuntu
    tasks:
      - name: "Wait for the target to reboot before probing it is up and running"
        ansible.builtin.wait_for:
          timeout: 60
        delegate_to: localhost
      - name: "wait for boot up"
        ansible.builtin.wait_for_connection:
          connect_timeout: 5
          sleep: 5
          delay: 30
          timeout: 600
      - name: Apt installs
        become: true
        apt:
          update_cache: yes
          lock_timeout: 300
          pkg:
            - nfs-client
            - vim
      - name: x86-only apt installs
        when: ansible_architecture == "x86_64"
        become: true
        apt:
          pkg:
            - intel-media-va-driver-non-free
            - libmfx1
      - name: Disable SWAP since kubernetes can't work with swap enabled (1/2)
        become: true
        shell: |
          swapoff -a
      - name: Disable SWAP in fstab since kubernetes can't work with swap enabled (2/2)
        become: true
        replace:
          path: /etc/fstab
          regexp: '^([^#].*?\sswap\s+sw\s+.*)$'
          replace: '# \1'
      - name: get PARTUUID
        ansible.builtin.command: 'lsblk {{ usb_disk }} -no PARTUUID'
        register: partuuid
        when: usb_disk is defined
      - name: Mount up USB disk
        become: true
        ansible.posix.mount:
          path: /mnt/usb
          src: 'PARTUUID={{ partuuid.stdout }}'
          fstype: ext4
          opts: noatime
          state: mounted
        when: usb_disk is defined
      - name: Create k3s directory on usb device
        become: true
        file:
          path: /mnt/usb/k3s
          state: directory
        when: usb_disk is defined
      - name: Create longhorn directory on usb device
        become: true
        file:
          path: /mnt/usb/longhorn
          state: directory
        when: usb_disk is defined
      - name: Create rancher root directory
        become: true
        file:
          path: /var/lib/rancher
          state: directory
      - name: Create symbolic link for usb dir
        become: true
        file:
          dest: "/var/lib/rancher/k3s"
          src: "/mnt/usb/k3s"
          state: link
        when: usb_disk is defined
      - name: Make journalctl log to memory
        become: true
        ansible.builtin.lineinfile:
          path: /etc/systemd/journald.conf
          insertbefore: '^#Storage=auto'
          line: 'Storage=volatile'
          firstmatch: true
      - name: Restart journald service
        ansible.builtin.systemd:
          state: restarted
          name: systemd-journald.service
      - name: Pre-installation reboot
        reboot:
      - name: Download k3s agent installer
        tags: 
          - k3s
        get_url:
          url: https://get.k3s.io
          dest: /tmp/k3s-setup.sh
          mode: 0755
      - name: Run k3s agent installer
        tags: 
          - k3s
        shell: /tmp/k3s-setup.sh
        become: true
        environment:
          K3S_URL: https://10.10.10.10:6443 
          K3S_TOKEN: "{{ k3s_token }}"
