apiVersion: apps/v1
kind: Deployment
metadata:
  name: plex
spec:
  selector:
    matchLabels:
      run: plex
  replicas: 1 
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        run: plex
    spec:
      nodeSelector:
        kubernetes.io/arch: amd64
        kubernetes.io/hostname: celery
      volumes:
        - name: nfs
          persistentVolumeClaim:
            claimName: nfs-claim
        - name: plex-ramdisk-mount
          emptyDir: {}
        - name: ramdisk
          emptyDir:
            sizeLimit: 1550M
      terminationGracePeriodSeconds: 60
      containers:
        - name: plex-config
          image: ghcr.io/ohthehugemanatee/sidecar-sync:multiarch
          imagePullPolicy: Always
          resources: {}
          env:
            - name: SIZE
              value: '1550M'
          securityContext:
            privileged: true
          volumeMounts:
            - name: ramdisk
              mountPath: /tmp/ramdisk
            - name: nfs
              mountPath: /tmp/durable-storage
              subPath: ".docker/config/plex/Library/Application Support/Plex Media Server/Plug-in Support/Databases.storage"
            - name: plex-ramdisk-mount
              mountPath: /mnt/active-storage
              mountPropagation: Bidirectional
        - name: plex
          image: linuxserver/plex
          imagePullPolicy: Always
          command:
            - /bin/bash
            - -c
            - until [ -f "/config/Library/Application Support/Plex Media Server/Plug-in Support/Databases/ready" ]; do sleep 1; done; chown -R 1000:1000 "/config/Library/Application Support/Plex Media Server/Plug-in Support/Databases";  exec /init
          resources:
            requests:
              memory: "1024Mi"
              cpu: "1000m"
            limits:
              memory: "2Gi"
              cpu: "1000m" 
              gpu.intel.com/i915: 1
          ports:
            - containerPort: 32400
          startupProbe:
            tcpSocket:
              port: 32400
            initialDelaySeconds: 15 
            periodSeconds: 10 
            successThreshold: 1
            failureThreshold: 30
          livenessProbe:
            tcpSocket:
              port: 32400
            initialDelaySeconds: 60
            periodSeconds: 60
            timeoutSeconds: 10
            failureThreshold: 5 
            successThreshold: 1
          env:
            - name: PGID
              value: "1000"
            - name: PUID
              value: "1000"
            - name: TZ
              value: "Europe/Berlin"
            - name: VERSION
              value: "latest"
          volumeMounts:
            - mountPath: /config
              name: nfs
              subPath: ".docker/config/plex"
            - mountPath: "/config/Library/Application Support/Plex Media Server/Plug-in Support/Databases"
              mountPropagation: HostToContainer
              name: plex-ramdisk-mount
            - name: nfs
              mountPath: "/shared"
            - name: nfs
              mountPath: "/data/movies"
              subPath: "media/Movies"
            - name: nfs
              mountPath: "/movies"
              subPath: "media/Movies"
            - name: nfs
              mountPath: "/data/music"
              subPath: "media/Music"
            - name: nfs
              mountPath: "/music"
              subPath: "media/Music"
            - name: nfs
              mountPath: "/data/tv"
              subPath: "media/TV Shows"
            - name: nfs
              mountPath: "/tv"
              subPath: "media/TV Shows"
            - name: nfs
              mountPath: "/transcode"
              subPath: "media/.plex-transcode"

---

apiVersion: v1
kind: Service
metadata:
  name: plex
  labels:
    run: plex
spec:
  ports:
  - port: 32400
    protocol: TCP
  selector:
    run: plex

---

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: plex
spec:
  rules:
  - host: plex.cluster.vert
    http:
      paths:
      - path: /
        backend:
          serviceName: plex
          servicePort: 32400
  - host: plex.germany.vertesi.com
    http:
      paths:
      - path: /
        backend:
          serviceName: plex
          servicePort: 32400
  - host: plex.vert
    http:
      paths:
      - path: /
        backend:
          serviceName: plex
          servicePort: 32400
---
apiVersion: v1
kind: Service
metadata:
  name: plex-lb
  labels:
    run: plex-lb
spec:
  type: LoadBalancer
  selector:
    run: plex
  ports:
    - protocol: TCP
      port: 32400
