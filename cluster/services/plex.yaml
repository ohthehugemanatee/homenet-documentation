apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: plex
spec:
  selector:
    matchLabels:
      run: plex
  replicas: 1 
  serviceName: plex
  volumeClaimTemplates:
    - metadata:
        name: plex-live-db
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: "longhorn"
        resources:
          requests:
            storage: 3Gi
  template:
    metadata:
      labels:
        run: plex
    spec:
      nodeSelector:
        kubernetes.io/hostname: fuji
      volumes:
        - name: nfs
          persistentVolumeClaim:
            claimName: nfs-claim
        - name: promtail-config
          configMap:
            name: sidecar-promtail
        - name: plex-logs
          emptyDir: {}
      securityContext:
        fsGroup: 1000
      containers:
        - name: plex-promtail
          image: grafana/promtail:2.1.0
          imagePullPolicy: IfNotPresent
          args:
            - "-config.file=/etc/promtail/config.yml"
            - '--client.external-labels=run=$(POD_RUN),namespace=$(POD_NAMESPACE),pod=$(POD_NAME)' 
          env:
            - name: POD_RUN
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['run']
            - name: POD_NAMESPACE 
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          volumeMounts:
            - name: plex-logs
              mountPath: /sidecar-logs
            - mountPath: /etc/promtail
              name: promtail-config
        - name: plex
          image: linuxserver/plex:latest
          imagePullPolicy: Always
          resources:
            limits:
              gpu.intel.com/i915: 1
              memory: 1Gi
          ports:
            - containerPort: 32400
          startupProbe:
            tcpSocket:
              port: 32400
            initialDelaySeconds: 15 
            periodSeconds: 10 
            successThreshold: 1
            failureThreshold: 30
          livenessProbe:
            tcpSocket:
              port: 32400
            initialDelaySeconds: 60
            periodSeconds: 60
            timeoutSeconds: 10
            failureThreshold: 5 
            successThreshold: 1
          env:
            - name: TZ
              value: "Europe/Berlin"
            - name: VERSION
              value: "latest"
            - name: PGID
              value: "1000"
            - name: PUID
              value: "1000"
            - name: LIBVA_DRIVER_NAME
              value: "i965"
          volumeMounts:
            - mountPath: /config
              name: nfs
              subPath: ".docker/config/plex/plex-config"
            - mountPath: "/config/Library/Application Support/Plex Media Server/Plug-in Support/Databases"
              name: plex-live-db
            - name: plex-logs
              mountPath: "/config/Library/Application Support/Plex Media Server/Logs"
            - mountPath: /custom-cont-init.d
              name: nfs
              subPath: ".docker/config/plex/custom-cont-init.d"
            - mountPath: /custom-services.d
              name: nfs
              subPath: ".docker/config/plex/custom-services.d"
            - name: nfs
              mountPath: "/shared"
            - name: nfs
              mountPath: "/data/movies"
              subPath: "media/Movies"
            - name: nfs
              mountPath: "/movies"
              subPath: "media/Movies"
            - name: nfs
              mountPath: "/data/music"
              subPath: "media/Music"
            - name: nfs
              mountPath: "/music"
              subPath: "media/Music"
            - name: nfs
              mountPath: "/data/tv"
              subPath: "media/TV Shows"
            - name: nfs
              mountPath: "/tv"
              subPath: "media/TV Shows"

---

apiVersion: v1
kind: Service
metadata:
  name: plex
  labels:
    run: plex
spec:
  ports:
  - port: 32400
    protocol: TCP
  selector:
    run: plex

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: plex-internal
spec:
  rules:
  - host: plex.cluster.vert
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: plex
            port:
              number: 32400
  - host: plex.vert
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: plex
            port:
              number: 32400
---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: plex-external-cloudflare
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    traefik.ingress.kubernetes.io/redirect-entry-point: https
spec:
  rules:
  - host: plex.vertesi.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: plex
            port:
              number: 32400
  tls:
    - hosts:
      - plex.vertesi.com
      secretName: plex-vertesi-com-tls

