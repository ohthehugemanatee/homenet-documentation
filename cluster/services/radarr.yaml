apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: radarr
spec:
  selector:
    matchLabels:
      run: radarr
  replicas: 1 
  serviceName: radarr
  template:
    metadata:
      labels:
        run: radarr
    spec:
      volumes:
        - name: nfs
          persistentVolumeClaim:
            claimName: nfs-claim
        - emptyDir: {}
          name: radarr-db
        - name: litestream-config
          configMap:
            name: radarr-litestream
      initContainers:
        - name: init-litestream
          image: litestream/litestream:0.4.0-beta.2
          args: ['restore', '-if-db-not-exists', '-if-replica-exists', '-v', '/db/radarr.db']
          volumeMounts:
          - name: radarr-db
            mountPath: /db
          - name: nfs
            subPath: ".docker/config/radarr/db-backup.litestream"
            mountPath: /db.backup
          - name: litestream-config
            mountPath: /etc/litestream.yml
            subPath: litestream.yml
      containers:
        - name: radarr-litestream
          image: litestream/litestream:0.4.0-beta.2
          args: ['replicate']
          volumeMounts:
          - name: radarr-db
            mountPath: /db
          - name: nfs
            subPath: ".docker/config/radarr/db-backup.litestream"
            mountPath: /db.backup
          - name: litestream-config
            mountPath: /etc/litestream.yml
            subPath: litestream.yml
        - name: radarr
          image: linuxserver/radarr
          ports:
            - containerPort: 7878
          env:
            - name: PGID
              value: "1000"
            - name: PUID
              value: "1000"
            - name: TZ
              value: "Europe/Berlin"
          volumeMounts:
            - mountPath: /db
              name: radarr-db
            - name: nfs
              mountPath: /config
              subPath: ".docker/config/radarr"
            - name: nfs
              mountPath: "/downloads"
              subPath: "media/Downloads"
            - name: nfs
              mountPath: "/movies"
              subPath: "media/Movies"
            - name: nfs
              mountPath: "/data"
              subPath: "media/Downloads"

---

apiVersion: v1
kind: Service
metadata:
  name: radarr
  labels:
    run: radarr
spec:
  ports:
  - port: 7878
    protocol: TCP
  selector:
    run: radarr

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: radarr
spec:
  rules:
  - host: radarr.cluster.vert
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: radarr
            port:
              number: 7878
  - host: radarr.vert
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: radarr
            port:
              number: 7878

