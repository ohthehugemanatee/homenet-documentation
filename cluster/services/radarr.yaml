apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: radarr
spec:
  selector:
    matchLabels:
      run: radarr
  replicas: 1 
  serviceName: radarr
  volumeClaimTemplates:
    - metadata:
        name: radarr-db
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: "longhorn"
        resources:
          requests:
            storage: 3Gi
  template:
    metadata:
      labels:
        run: radarr
    spec:
      volumes:
        - name: nfs
          persistentVolumeClaim:
            claimName: nfs-claim
      containers:
        - name: radarr
          image: linuxserver/radarr
          ports:
            - containerPort: 7878
          env:
            - name: PGID
              value: "1000"
            - name: PUID
              value: "1000"
            - name: TZ
              value: "Europe/Berlin"
          volumeMounts:
            - mountPath: /db
              name: radarr-db
            - name: nfs
              mountPath: /config
              subPath: ".docker/config/radarr"
            - name: nfs
              mountPath: "/downloads"
              subPath: "media/Downloads"
            - name: nfs
              mountPath: "/movies"
              subPath: "media/Movies"
            - name: nfs
              mountPath: "/data"
              subPath: "media/Downloads"

---

apiVersion: v1
kind: Service
metadata:
  name: radarr
  labels:
    run: radarr
spec:
  ports:
  - port: 7878
    protocol: TCP
  selector:
    run: radarr

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: radarr
spec:
  rules:
  - host: radarr.cluster.vert
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: radarr
            port:
              number: 7878
  - host: radarr.vert
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: radarr
            port:
              number: 7878

