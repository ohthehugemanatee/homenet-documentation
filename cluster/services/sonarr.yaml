apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: sonarr
spec:
  selector:
    matchLabels:
      run: sonarr
  replicas: 1
  serviceName: sonarr
  template:
    metadata:
        labels:
          run: sonarr
    spec:
      volumes:
        - name: nfs
          persistentVolumeClaim:
            claimName: nfs-claim
        - emptyDir: {}
          name: sonarr-db
        - name: litestream-config
          configMap:
            name: sonarr-litestream
      initContainers:
        - name: init-litestream
          image: litestream/litestream:0.3.7
          args: ['restore', '-if-db-not-exists', '-if-replica-exists', '-v', '/db/sonarr.db']
          volumeMounts:
          - name: sonarr-db
            mountPath: /db
          - name: nfs
            subPath: ".docker/config/sonarr/db-backup.litestream"
            mountPath: /db.backup
          - name: litestream-config
            mountPath: /etc/litestream.yml
            subPath: litestream.yml
      containers:
        - name: sonarr-litestream
          image: litestream/litestream:0.3.7
          args: ['replicate']
          volumeMounts:
          - name: sonarr-db
            mountPath: /db
          - name: nfs
            subPath: ".docker/config/sonarr/db-backup.litestream"
            mountPath: /db.backup
          - name: litestream-config
            mountPath: /etc/litestream.yml
            subPath: litestream.yml
        - name: sonarr
          env:
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
          image: linuxserver/sonarr
          ports:
            - containerPort: 8989
              name: sonarr
              protocol: TCP
          volumeMounts:
            - mountPath: /db
              name: sonarr-db
            - name: nfs
              mountPath: /config
              subPath: ".docker/config/sonarr"
            - name: nfs
              mountPath: "/downloads"
              subPath: "media/Downloads"
            - name: nfs
              mountPath: "/tv"
              subPath: "media/TV Shows"
            - name: nfs
              mountPath: "/data"
              subPath: "media/Downloads"
          livenessProbe:
            httpGet:
              path: /
              port: 8989
            initialDelaySeconds: 60
            periodSeconds: 30 
---

apiVersion: v1
kind: Service
metadata:
  name: sonarr
  labels:
    run: sonarr
spec:
  ports:
  - port: 8989
    protocol: TCP
  selector:
    run: sonarr

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: sonarr
spec:
  rules:
  - host: sonarr.cluster.vert
    http:
      paths:
        - pathType: Prefix
          path: /
          backend:
            service:
              name: sonarr
              port: 
                number: 8989
  - host: sonarr.vert
    http:
      paths:
        - pathType: Prefix
          path: /
          backend:
            service:
              name: sonarr
              port:
                number: 8989
