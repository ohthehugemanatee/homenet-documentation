apiVersion: apps/v1
kind: Deployment
metadata:
  name: radarr
spec:
  selector:
    matchLabels:
      run: radarr
  replicas: 1 
  template:
    metadata:
      labels:
        run: radarr
    spec:
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: radarr-config
        - name: downloads
          persistentVolumeClaim:
            claimName: radarr-downloads
        - name: movies
          persistentVolumeClaim:
            claimName: radarr-movies
      containers:
      - name: radarr
        image: linuxserver/radarr
        ports:
          - containerPort: 7878
        env:
          - name: PGID
            value: "1000"
          - name: PUID
            value: "1000"
          - name: TZ
            value: "Europe/Berlin"
        volumeMounts:
          - name: config
            mountPath: "/config"
          - name: downloads
            mountPath: "/downloads"
          - name: movies
            mountPath: "/movies"

---

apiVersion: v1
kind: Service
metadata:
  name: radarr
  labels:
    run: radarr
spec:
  ports:
  - port: 7878
    protocol: TCP
  selector:
    run: radarr

---

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: radarr
spec:
  rules:
  - host: radarr.cluster.vert
    http:
      paths:
      - path: /
        backend:
          serviceName: radarr
          servicePort: 7878

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: radarr-config
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 8Ti
  storageClassName: ""
  selector:
    matchLabels:
      name: "nfs-config"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: radarr-downloads
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 8Ti
  storageClassName: ""
  selector:
    matchLabels:
      name: "nfs-downloads"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: radarr-movies
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 8Ti
  storageClassName: ""
  selector:
    matchLabels:
      name: "nfs-movies"
